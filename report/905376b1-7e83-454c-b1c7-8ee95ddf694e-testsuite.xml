<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1569693344136" stop="1569693450884">
  <name>testcases</name>
  <labels/>
  <test-cases>
    <test-case start="1569693344136" status="passed" stop="1569693364121">
      <description>输入正确账号和正确密码</description>
      <name>test_login.TestLogin.test_login[account0]</name>
      <attachments>
        <attachment source="667995ca-662d-49d2-9e97-84ee2792c8ea-attachment.txt" title="输入账号" type="text/plain"/>
        <attachment source="edb5d0b4-441e-4817-af3e-c331b85aacdb-attachment.txt" title="输入密码" type="text/plain"/>
      </attachments>
      <labels>
        <label name="feature" value="测试用例：登录功能"/>
        <label name="severity" value="normal"/>
        <label name="thread" value="11676-MainThread"/>
        <label name="host" value="DESKTOP-QCTRQ3R"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1569693365350" status="passed" stop="1569693386071">
      <description>输入账号后加空格和正确密码</description>
      <name>test_login.TestLogin.test_login[account1]</name>
      <attachments>
        <attachment source="7607b5f7-5ecb-473f-9605-9db2325d0396-attachment.txt" title="输入账号" type="text/plain"/>
        <attachment source="be349528-8f38-4628-a0eb-eca1b712530e-attachment.txt" title="输入密码" type="text/plain"/>
      </attachments>
      <labels>
        <label name="feature" value="测试用例：登录功能"/>
        <label name="severity" value="normal"/>
        <label name="thread" value="11676-MainThread"/>
        <label name="host" value="DESKTOP-QCTRQ3R"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1569693387270" status="broken" stop="1569693408208">
      <name>test_login.TestLogin.test_login[account2]</name>
      <failure>
        <message>NoSuchElementException: Message: None
</message>
        <stack-trace>self = &lt;page.login_page.LoginPage object at 0x0000016F135CCDA0&gt;
kw = {'xpath': ('resource-id, com.tpshop.malls:id/mine_tv', 'text, 我的')}, swipe = False

    def element(self, kw, swipe):
        """
        find_element
        :param swipe: bool, swipe page or not
        :param kw: 'locator':'value'
        :return: element
        """
        if not kw:
            raise ValueError("Please specify a locator")
        if len(kw) &gt; 1:
            raise ValueError("Please specify only one locator")
        k, v = next(iter(kw.items()))
        if k == 'xpath':
            v = self.make_xpath_feature(v)
        while True:
            try:
&gt;               return WebDriverWait(self.driver, 1, 0.2).until(lambda x: x.find_element(self._LOCATOR_MAP[k], v))

base\base_page.py:82: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="7bf8dfdf-2391-4f2a-8eaf-db4d8089b8c5")&gt;
method = &lt;function PageAction.element.&lt;locals&gt;.&lt;lambda&gt; at 0x0000016F135BD9D8&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

..\test\venv\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException

During handling of the above exception, another exception occurred:

self = &lt;testcases.test_login.TestLogin object at 0x0000016F135CCE80&gt;

    def setup(self):
&gt;       self.login_page = LoginPage(android_driver())

testcases\test_login.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
page\login_page.py:14: in __init__
    self.__jump_2_login_page()
page\login_page.py:17: in __jump_2_login_page
    self.click(self.my_button)
base\base_page.py:25: in click
    self.element(loc, swipe).click()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;page.login_page.LoginPage object at 0x0000016F135CCDA0&gt;
kw = {'xpath': ('resource-id, com.tpshop.malls:id/mine_tv', 'text, 我的')}, swipe = False

    def element(self, kw, swipe):
        """
        find_element
        :param swipe: bool, swipe page or not
        :param kw: 'locator':'value'
        :return: element
        """
        if not kw:
            raise ValueError("Please specify a locator")
        if len(kw) &gt; 1:
            raise ValueError("Please specify only one locator")
        k, v = next(iter(kw.items()))
        if k == 'xpath':
            v = self.make_xpath_feature(v)
        while True:
            try:
                return WebDriverWait(self.driver, 1, 0.2).until(lambda x: x.find_element(self._LOCATOR_MAP[k], v))
            except TimeoutException:
                if swipe:
                    before_swipe = self.driver.page_source
                    self.swipe_page()
                    if self.driver.page_source == before_swipe:
                        raise NoSuchElementException
                else:
&gt;                   raise NoSuchElementException
E                   selenium.common.exceptions.NoSuchElementException: Message: None

base\base_page.py:90: NoSuchElementException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="feature" value="测试用例：登录功能"/>
        <label name="severity" value="normal"/>
        <label name="thread" value="11676-MainThread"/>
        <label name="host" value="DESKTOP-QCTRQ3R"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1569693408208" status="passed" stop="1569693429401">
      <description>输入错误账号和正确密码</description>
      <name>test_login.TestLogin.test_login[account3]</name>
      <attachments>
        <attachment source="e816fa16-682f-4195-ac0e-a38c61605f37-attachment.txt" title="输入账号" type="text/plain"/>
        <attachment source="27603fd9-7edb-4d3c-97b8-c588777407e3-attachment.txt" title="输入密码" type="text/plain"/>
      </attachments>
      <labels>
        <label name="feature" value="测试用例：登录功能"/>
        <label name="severity" value="normal"/>
        <label name="thread" value="11676-MainThread"/>
        <label name="host" value="DESKTOP-QCTRQ3R"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1569693430670" status="passed" stop="1569693450884">
      <description>输入正确账号和错误密码</description>
      <name>test_login.TestLogin.test_login[account4]</name>
      <attachments>
        <attachment source="0f8cc3c6-87a3-4abc-bc14-bf46669eac0b-attachment.txt" title="输入账号" type="text/plain"/>
        <attachment source="0ba5f284-eb7e-4e71-99ae-6e2b03062cd9-attachment.txt" title="输入密码" type="text/plain"/>
      </attachments>
      <labels>
        <label name="feature" value="测试用例：登录功能"/>
        <label name="severity" value="normal"/>
        <label name="thread" value="11676-MainThread"/>
        <label name="host" value="DESKTOP-QCTRQ3R"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
